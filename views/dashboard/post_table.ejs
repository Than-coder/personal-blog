<%- include('sidenav')%>

<style>
  #post-table {
    margin-top: 1rem;
  }
</style>

<div id="post-table">
  <div class="container center">
    <!-- post content -->
    <div class="row">
      <div class="col s2">
        <button onclick="new_post()" class="btn">New Post</button>
      </div>
    </div>
    <div class="divider"></div>
    <table class="striped center responsive-table">
      <thead>
        <tr>
          <th>Title</th>
          <th>Author</th>
          <th>Category</th>
          <th>Public</th>
          <th>Date</th>
          <th>Edit</th>
          <th>Delete</th>
        </tr>
      </thead>
      <tbody>
        <%for(let post of posts){%>
        <tr>
          <td><a href="/post/?post_id=<%=post.id%>"><%=post.title%></a></td>
          <td><%=post.author%></td>
          <td><%=post.is_public == 1 ? 'Public': 'Draft'%></td>
          <td><%=post.category_name%></td>
          <td><%=new Date(post.create_date).toLocaleString()%></td>
          <td>
            <a
              href="/dashboard/post-table-edit/?post_id=<%=post.id%>"
              class="btn teal"
              >Edit</a
            >
          </td>
          <td>
            <button onclick="post_delete('<%=post.id%>')" class="btn red">
              Delete
            </button>
          </td>
        </tr>
        <%}%>
      </tbody>
    </table>
    <ul class="pagination center">
      <%for(let page of pages){%>
      <li class="waves-effect <%= page == current_page ? 'active':''%>">
        <a href="/dashboard/post-table/?page=<%=page%>"><%=page%></a>
      </li>
      <%}%>
    </ul>
  </div>
</div>

<script>
  // delete
  async function post_delete(id) {
    if (window.confirm("Are You Sure?") == false) return false;
    try {
      let res = await axios.delete(`/dashboard/post-delete-api/?post_id=${id}`);

      // success
      M.toast({ html: res.data.message });
      // refresh
      window.location.href = "/dashboard/post-table";
    } catch (error) {
      console.log(error.response);
      M.toast({ html: error.response.statusText });
      if (error.response.data.message) {
        M.toast({ html: error.response.data.message });
      }
    }
  }

  // new post
  async function new_post() {
    try {
      let res = await axios.post(
        "/dashboard/post-new-api",
        {},
        {
          headers: {
            "Content-Type": "application/json"
          }
        }
      );
      // success
      window.location.href = `/dashboard/post-table-edit/?post_id=${res.data.post_id}`;
    } catch (error) {
      console.log(error.response);
      M.toast({ html: error.response.statusText });
      M.toast({ html: error.response.data.message });
    }
  }
</script>
